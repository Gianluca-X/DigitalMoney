
services:
  mysql:
    container_name: mysql
    mem_limit: 512m
    cpus: 0.5
    image: mysql:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${ACCOUNT_DB_DATABASE}
      MYSQL_USER: ${ACCOUNT_DB_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3308:3306"
    volumes:
      - mysql:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - back_network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root --password=${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      retries: 5
      timeout: 10s

  eureka-server:
    container_name: eureka-server
    mem_limit: 512m
    cpus: 0.5
    build:
      context: .
      dockerfile: ./eureka-server/Dockerfile
    ports:
      - "8761:8761"
    networks:
      - back_network

  config-server:
    container_name: config-server
    mem_limit: 512m
    cpus: 0.5
    build:
      context: .
      dockerfile: ./config-server/Dockerfile
    ports:
      - "8888:8888"
    env_file:
      - .env
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
    depends_on:
      - eureka-server
    networks:
      - back_network
  auth-service:
    container_name: auth-service
    mem_limit: 1g
    cpus: 1
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    ports:
      - "8082:8082"
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_URL=${AUTH_DB_URL}
      - SPRING_DATASOURCE_USERNAME=${AUTH_DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQLDialect
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - back_network

  gateway:
    container_name: gateway
    mem_limit: 1g
    cpus: 1

    build:
      context: .
      dockerfile: ./gateway/Dockerfile
    ports:
      - "8085:8085"
    env_file:
      - .env
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
    depends_on:
      - eureka-server
      - config-server
    networks:
      - back_network

  user-service:
    container_name: user-service
    mem_limit: 1g
    cpus: 1

    env_file:
      - .env
    build:
      context: .
      dockerfile: ./user-service/Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=${USER_DB_URL}
      - SPRING_DATASOURCE_USERNAME=${USER_DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQLDialect
    networks:
      - back_network
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_started
      config-server:
        condition: service_started
    ports:
      - "8087:8087"

  accounts-service:
    container_name: accounts-service
    mem_limit: 1g
    cpus: 1
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./accounts-service/Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=${ACCOUNT_DB_URL}
      - SPRING_DATASOURCE_USERNAME=${ACCOUNT_DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQLDialect
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - back_network
    ports:
      - "8084:8084"
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_started
      config-server:
        condition: service_started

  rabbitmq:
    container_name: rabbitmq
    mem_limit: 512m
    cpus: 0.5
    image: rabbitmq:3-management
    ports:
      - "5672:5672"     # Puerto para la comunicación entre apps
      - "15672:15672"   # UI de administración web
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - back_network

volumes:
  mysql:
  postgres_data:

networks:
  back_network:
    driver: bridge
